"""
This is part of the janus package.
"""

__author__ = "Jan Meyer"
__email__ = "jan.meyer@desy.de"
__copyright__ = "(c)2019 DESY, FS-BMX, FS-Petra-D, P11"
__license__ = "GPL"


import random
from PyQt5.QtCore import QObject, pyqtSignal
from ..core import Object
from ..const import State
from .connector import SimulationConnector, TangoConnector
from .devicebase import DeviceBase


class Xspress3(QObject, Object, DeviceBase):

    value_changed = pyqtSignal(str, name="valueChanged")

    def __init__(self, connector=None, uri=None, updateInterval = 0.5):
        QObject.__init__(self)
        Object.__init__(self)
        self.uri = uri
        self.attributes = [ \
            {"attr": "State", "name": "state", "mode": "read", "type": State},
            {"attr": "ExposureTime", "name": "exposure_time", "mode": "write", "type": float},
            {"name": "bin_width", "mode": "read", "type": float},
            {"name": "bin_energies", "mode": "read", "type": list},
            {"attr": "NbFrames", "name": "frames", "mode": "write", "type": int},
            {"attr": "TriggerMode", "name": "trigger_mode", "mode": "write", "type": int},
            {"attr": "FileDir", "name": "file_dir", "mode": "write", "type": str},
            {"attr": "FilePrefix", "name": "file_name", "mode": "write", "type": str},
            {"attr": "LastFrame", "name": "last_frame", "mode": "read", "type": int},
            {"name": "channel1", "mode": "read", "type": list},
            {"name": "channel2", "mode": "read", "type": list},
            {"name": "channel3", "mode": "read", "type": list},
            {"name": "channel4", "mode": "read", "type": list},
            {"attr": "StartAcquisition", "name": "start_acquisition", "mode": "execute"},
            {"attr": "StopAcquisition", "name": "stop_acquisition", "mode": "execute"},
        ]
        self.channels = 0
        self.connector = None
        if connector == "tango":
            self.connector = TangoConnector(uri, \
                    self.attributes, interval=updateInterval)
            try:
                attributes = self.connector.proxy.get_attribute_list()
            except Exception:
                self.janus.utils["logger"].error(
                    "Xspress3({}).__init__() connection failed".format(self.uri))
                self.janus.utils["logger"].debug("", exc_info=True)
            if "DataCh3" in attributes:
                self.channels = 4
            elif "DataCh2" in attributes:
                self.channels = 3
            elif "DataCh1" in attributes:
                self.channels = 2
            elif "DataCh0" in attributes:
                self.channels = 1
            for i in range(self.channels, 0, -1):
                del self.attributes[-1]
                delattr(self, "channel" + str(i))
        if connector == "simulation" or self.connector is None:
            self.connector = SimulationConnector(uri, self.attributes)
            if connector != "simulation":
                self.connector.write("state", State.UNKNOWN)
            self.channels = 4
        self.connector.value_changed.connect(self.value_changed.emit)

    def start_acquisition(self):
        self.connector.execute("start_acquisition")

    def stop_acquisition(self):
        self.connector.execute("stop_acquisition")

    def on_value_changed(self, attribute):
        if attribute == "last_frame":
            self.value_changed.emit("channel1")
            self.value_changed.emit("channel2")
            self.value_changed.emit("channel3")
            self.value_changed.emit("channel4")
        else:
            self.value_changed.emit(attribute)

    def state(self, refresh=False):
        return self.connector.state(refresh)
    
    def exposure_time(self, value=None, refresh=False, alt=None):
        if value is not None:
            self.connector.write("exposure_time", value)
        else:
            return self.connector.read("exposure_time", refresh, alt)

    def bin_width(self, refresh=True, alt=None):
        return 10.0 #eV

    def bin_energies(self, refresh=True, alt=None):
        width = self.bin_width()
        return [b * width + width / 2 for b in range(4096)]

    def frames(self, value=None, refresh=False, alt=None):
        if value is not None:
            self.connector.write("frames", int(value))
        else:
            return self.connector.read("frames", refresh, alt)

    def trigger_mode(self, value=None, refresh=False, alt=None):
        if value is not None:
            self.connector.write("trigger_mode", int(value))
        else:
            return self.connector.read("trigger_mode", refresh, alt)

    def file_dir(self, value=None, refresh=False, alt=None):
        if value is not None:
            self.connector.write("file_dir", value)
        else:
            return self.connector.read("file_dir", refresh, alt)

    def file_name(self, value=None, refresh=False, alt=None):
        if value is not None:
            self.connector.write("file_name", value)
        else:
            return self.connector.read("file_name", refresh, alt)

    def _channel(self, i, alt=None):
        if type(self.connector) == TangoConnector:
            try:
                return self.connector.proxy.read_attribute( \
                        "DataCh" + str(i - 1))
            except:
                self.janus.utils["logger"].error(
                    "Xspress3(" + self.uri + ").channel" + str(i) +
                    "() reading tango attribute failed")
                self.janus.utils["logger"].debug("", exc_info=True)
        elif type(self.connector) == SimulationConnector:
            #random_list = []
            #for i in range(0, 4096):
            #    random_list.append(random.randint(0, 200))
            #return random_list
            return sim_spectrum
        if alt is None:
            return 4096*[0.0]
        else:
            return alt

    def channel1(self, refresh=True, alt=None):
        return self._channel(1, alt)

    def channel2(self, refresh=True, alt=None):
        return self._channel(2, alt)

    def channel3(self, refresh=True, alt=None):
        return self._channel(3, alt)

    def channel4(self, refresh=True, alt=None):
        return self._channel(4, alt)


sim_spectrum = [0, 210, 168, 179, 144, 100, 92, 75, 41, 26, 21, 15, 14, 9, 7, 4,
        3, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 2,
        1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 2, 3, 0, 4, 1, 3, 0, 1, 1, 0, 1, 2, 1, 0,
        0, 2, 5, 0, 1, 2, 1, 1, 1, 2, 0, 0, 1, 0, 0, 0, 0, 2, 1, 4, 1, 0, 1, 1,
        3, 4, 0, 6, 0, 1, 0, 1, 3, 1, 0, 1, 1, 2, 1, 1, 4, 1, 2, 2, 2, 1, 0, 2,
        0, 2, 2, 4, 2, 3, 2, 7, 2, 3, 7, 2, 5, 4, 4, 2, 8, 6, 0, 2, 0, 2, 0, 0,
        1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 1, 2, 0, 2, 3, 2, 1, 1, 2, 4, 1, 1,
        3, 3, 0, 1, 0, 1, 1, 2, 0, 2, 2, 1, 0, 1, 2, 0, 4, 2, 0, 5, 3, 3, 2, 3,
        5, 2, 6, 4, 3, 6, 9, 5, 3, 2, 3, 3, 3, 3, 4, 5, 2, 4, 5, 10, 3, 17, 11,
        12, 19, 30, 31, 49, 36, 47, 45, 62, 69, 81, 87, 85, 66, 95, 73, 62, 62,
        47, 41, 39, 21, 26, 23, 17, 8, 10, 9, 10, 6, 11, 6, 6, 7, 16, 14, 11, 6,
        8, 6, 7, 10, 3, 10, 4, 1, 2, 2, 5, 2, 2, 3, 2, 1, 2, 1, 1, 0, 1, 0, 1,
        0, 0, 0, 0, 2, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 3, 1, 2, 2, 0, 1, 2, 1,
        3, 0, 0, 4, 2, 0, 3, 1, 0, 1, 1, 0, 0, 0, 0, 2, 1, 0, 0, 0, 1, 0, 1, 0,
        1, 3, 0, 2, 3, 0, 1, 1, 0, 2, 1, 2, 1, 1, 2, 1, 1, 0, 0, 1, 0, 2, 3, 0,
        2, 0, 0, 0, 2, 0, 0, 1, 2, 1, 1, 0, 1, 0, 1, 0, 2, 1, 1, 5, 1, 4, 8, 5,
        8, 3, 5, 5, 7, 12, 7, 6, 5, 5, 6, 10, 6, 6, 3, 6, 4, 2, 3, 5, 3, 2, 3,
        1, 1, 2, 1, 1, 4, 0, 0, 1, 2, 3, 3, 1, 0, 1, 3, 3, 1, 2, 1, 0, 2, 2, 3,
        6, 3, 3, 0, 4, 0, 1, 0, 1, 1, 3, 0, 0, 1, 0, 2, 1, 0, 1, 1, 1, 0, 0, 1,
        1, 1, 3, 1, 1, 1, 0, 2, 1, 0, 0, 0, 0, 1, 0, 3, 1, 5, 5, 3, 2, 1, 0, 3,
        1, 2, 6, 2, 1, 5, 2, 4, 4, 1, 1, 3, 0, 1, 2, 5, 0, 2, 1, 1, 0, 0, 0, 1,
        2, 2, 0, 3, 1, 2, 0, 1, 2, 1, 2, 3, 1, 0, 1, 3, 1, 4, 3, 2, 3, 2, 1, 4,
        8, 5, 2, 3, 7, 1, 5, 5, 4, 6, 3, 5, 1, 0, 2, 5, 6, 2, 5, 0, 2, 0, 3, 3,
        2, 1, 2, 3, 7, 7, 7, 7, 10, 13, 11, 24, 23, 25, 31, 35, 43, 50, 61, 61,
        86, 78, 80, 100, 103, 121, 124, 103, 126, 134, 119, 125, 95, 99, 84, 81,
        62, 59, 49, 44, 43, 32, 30, 20, 13, 10, 18, 7, 3, 4, 5, 3, 7, 2, 5, 4,
        6, 7, 4, 4, 7, 7, 4, 7, 7, 5, 4, 5, 5, 7, 5, 5, 4, 5, 6, 6, 8, 7, 11, 7,
        10, 8, 10, 13, 12, 15, 15, 17, 13, 24, 36, 17, 29, 27, 32, 18, 25, 25,
        25, 19, 21, 17, 21, 20, 20, 17, 18, 17, 11, 25, 18, 12, 17, 22, 18, 28,
        21, 26, 22, 20, 27, 20, 35, 33, 43, 32, 38, 53, 67, 60, 85, 93, 104,
        119, 140, 164, 200, 196, 218, 261, 255, 258, 308, 337, 338, 398, 431,
        485, 459, 580, 546, 617, 584, 608, 637, 687, 650, 673, 718, 652, 667,
        709, 660, 561, 590, 519, 447, 424, 348, 309, 243, 217, 187, 143, 107,
        85, 80, 57, 43, 23, 30, 21, 12, 9, 5, 5, 4, 2, 0, 2, 0, 1, 0, 2, 0, 0,
        0, 0, 0, 1, 1, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0,
        1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1,
        1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0,
        0, 0, 0, 0, 0, 2, 0, 1, 0, 2, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0,
        0, 1, 2, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 0, 1, 0, 0, 2, 1, 0, 2, 1, 1,
        2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
        0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 1, 1,
        0, 0, 1, 3, 3, 0, 2, 1, 1, 2, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 3,
        2, 4, 1, 3, 2, 1, 0, 1, 2, 3, 2, 1, 2, 0, 4, 2, 1, 2, 0, 0, 2, 0, 2, 0,
        0, 0, 3, 1, 0, 2, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2, 2, 1,
        0, 1, 0, 2, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 2, 1, 0, 1, 1, 0,
        0, 1, 0, 1, 3, 1, 0, 4, 3, 0, 4, 3, 0, 4, 4, 4, 0, 3, 6, 5, 1, 6, 4, 1,
        5, 2, 3, 4, 7, 5, 5, 7, 7, 4, 5, 4, 3, 7, 6, 8, 1, 8, 3, 3, 2, 1, 3, 1,
        5, 1, 4, 4, 6, 1, 0, 2, 4, 3, 1, 3, 0, 1, 1, 1, 1, 3, 0, 0, 0, 0, 0, 0,
        0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0]

